"use strict";(self.webpackChunkevents_app=self.webpackChunkevents_app||[]).push([["1970"],{12835:function(e){e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Suivant","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Anmelden","href":"/fr/docs/login/","docId":"login/index","unlisted":false},{"type":"link","label":"\xc9v\xe8nements","href":"/fr/docs/","docId":"index","unlisted":false},{"type":"category","label":"Termine","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Termine erfassen","href":"/fr/docs/events/new/","docId":"events/new/index","unlisted":false},{"type":"link","label":"Actualiser les \xe9v\xe8nements","href":"/fr/docs/events/update/","docId":"events/update/index","unlisted":false},{"type":"link","label":"Partager un \xe9v\xe8nement","href":"/fr/docs/events/share/","docId":"events/share/index","unlisted":false},{"type":"link","label":"Abonnieren","href":"/fr/docs/events/subscribe/","docId":"events/subscribe/index","unlisted":false},{"type":"link","label":"Termine Filtern","href":"/fr/docs/events/filter/","docId":"events/filter/index","unlisted":false},{"type":"link","label":"Termine aufs n\xe4chste Jahr \xdcbertragen","href":"/fr/docs/events/shift/","docId":"events/shift/index","unlisted":false},{"type":"link","label":"Termin-Import","href":"/fr/docs/events/import/","docId":"events/import/index","unlisted":false}],"href":"/fr/docs/events/"},{"type":"link","label":"Einf\xfchrungsphase","href":"/fr/docs/betaphase/","docId":"betaphase/index","unlisted":false},{"type":"category","label":"API Reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Events App","href":"/fr/docs/dev/intro/","docId":"dev/intro/index","unlisted":false},{"type":"link","label":"User Authentication","href":"/fr/docs/dev/authentication/","docId":"dev/authentication/index","unlisted":false},{"type":"link","label":"Database","href":"/fr/docs/dev/database/","docId":"dev/database/index","unlisted":false},{"type":"category","label":"Tutorial: events-api","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chapter 1: Database ORM (Prisma)","href":"/fr/docs/dev/events-api/database_orm__prisma__","docId":"dev/events-api/database_orm__prisma__","unlisted":false},{"type":"link","label":"Chapter 2: Data Logic (Models)","href":"/fr/docs/dev/events-api/data_logic__models__","docId":"dev/events-api/data_logic__models__","unlisted":false},{"type":"link","label":"Chapter 3: API Web Server (Express.js)","href":"/fr/docs/dev/events-api/api_web_server__express_js__","docId":"dev/events-api/api_web_server__express_js__","unlisted":false},{"type":"link","label":"Chapter 4: Access Control (Authentication & Authorization)","href":"/fr/docs/dev/events-api/access_control__authentication___authorization__","docId":"dev/events-api/access_control__authentication___authorization__","unlisted":false},{"type":"link","label":"Chapter 5: Request Handlers (Controllers)","href":"/fr/docs/dev/events-api/request_handlers__controllers__","docId":"dev/events-api/request_handlers__controllers__","unlisted":false},{"type":"link","label":"Chapter 6: External Data Sync","href":"/fr/docs/dev/events-api/external_data_sync_","docId":"dev/events-api/external_data_sync_","unlisted":false},{"type":"link","label":"Chapter 7: Background Task Runner (Bree)","href":"/fr/docs/dev/events-api/background_task_runner__bree__","docId":"dev/events-api/background_task_runner__bree__","unlisted":false},{"type":"link","label":"real_time_communication__socket_io__","href":"/fr/docs/dev/events-api/real_time_communication__socket_io__","docId":"dev/events-api/real_time_communication__socket_io__","unlisted":false},{"type":"link","label":"Chapter 9: Notifications (Email & Socket.IO)","href":"/fr/docs/dev/events-api/notifications__email___socket_io__","docId":"dev/events-api/notifications__email___socket_io__","unlisted":false}],"href":"/fr/docs/dev/events-api/"},{"type":"link","label":"Mode d\'emploi FR","href":"/fr/docs/dev/guide-fr/","docId":"dev/guide-fr/index","unlisted":false},{"type":"category","label":"Scenes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Events","href":"/fr/docs/dev/scenes/events/","docId":"dev/scenes/events/index","unlisted":false}],"href":"/fr/docs/dev/scenes/"},{"type":"category","label":"Services","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"ics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ICS","href":"/fr/docs/dev/services/ics/images/","docId":"dev/services/ics/images/index","unlisted":false}]},{"type":"link","label":"Notifications","href":"/fr/docs/dev/services/notifications/","docId":"dev/services/notifications/index","unlisted":false},{"type":"link","label":"WebUntis","href":"/fr/docs/dev/services/webuntis/","docId":"dev/services/webuntis/index","unlisted":false}]}]}]},"docs":{"betaphase/index":{"id":"betaphase/index","title":"Einf\xfchrungsphase","description":"W\xe4hrend der Einf\xfchrungsphase ist der digitale Terminkalender nach wie vor in der Entwicklungsphase. Dies bringt einige Einschr\xe4nktungen, aber auch Chancen mit sich:","sidebar":"tutorialSidebar"},"dev/authentication/index":{"id":"dev/authentication/index","title":"User Authentication","description":"The authentication is handled by Azure AD with an OAuth 2.0 authorization code flw (see for more details).","sidebar":"tutorialSidebar"},"dev/database/index":{"id":"dev/database/index","title":"Database","description":"\uD83D\uDC49","sidebar":"tutorialSidebar"},"dev/events-api/access_control__authentication___authorization__":{"id":"dev/events-api/access_control__authentication___authorization__","title":"Chapter 4: Access Control (Authentication & Authorization)","description":"Welcome back! In the previous chapter, API Web Server (Express.js), we learned how our events-api uses Express.js as its front door to receive requests from the outside world (like users or other applications). Express listens for requests, routes them to the right place, and uses middleware for initial processing like logging or parsing data.","sidebar":"tutorialSidebar"},"dev/events-api/api_web_server__express_js__":{"id":"dev/events-api/api_web_server__express_js__","title":"Chapter 3: API Web Server (Express.js)","description":"Welcome back! In the first two chapters, we explored how our application stores data using Prisma (Database ORM (Prisma)) and how we organize the data-related logic within Models (Data Logic (Models)). These pieces handle the \\"behind-the-scenes\\" work with our database.","sidebar":"tutorialSidebar"},"dev/events-api/background_task_runner__bree__":{"id":"dev/events-api/background_task_runner__bree__","title":"Chapter 7: Background Task Runner (Bree)","description":"Welcome back! In our last chapter, External Data Sync, we looked at how our events-api gets crucial data from outside sources like the Untis school system and legacy files through dedicated scripts, separate from the main web server request flow. These scripts handle tasks like fetching data periodically or importing large datasets.","sidebar":"tutorialSidebar"},"dev/events-api/data_logic__models__":{"id":"dev/events-api/data_logic__models__","title":"Chapter 2: Data Logic (Models)","description":"Welcome back! In our last chapter, we met Prisma, our trusty translator that helps our JavaScript code talk to the database (Database ORM (Prisma)). Prisma is great for basic tasks like \\"find a user by ID\\" or \\"create a new event record\\".","sidebar":"tutorialSidebar"},"dev/events-api/database_orm__prisma__":{"id":"dev/events-api/database_orm__prisma__","title":"Chapter 1: Database ORM (Prisma)","description":"Welcome to the first chapter of the events-api tutorial! We\'re starting our journey by looking at how our application talks to the database. Think of the database as a big storage room where all the important information (like users, events, and other data) lives.","sidebar":"tutorialSidebar"},"dev/events-api/external_data_sync_":{"id":"dev/events-api/external_data_sync_","title":"Chapter 6: External Data Sync","description":"Welcome back! So far, we\'ve explored how our events-api handles incoming requests from the \\"outside world\\" \u2013 think of a user clicking a button in a web application. We saw how Express.js receives the request (API Web Server (Express.js)), middleware secures it (Access Control (Authentication & Authorization)), Controllers direct it (Request Handlers (Controllers)), and Models and Prisma interact with the database (Data Logic (Models), Database ORM (Prisma)). This is the core flow for user-initiated actions.","sidebar":"tutorialSidebar"},"dev/events-api/index":{"id":"dev/events-api/index","title":"Tutorial: events-api","description":"This project is an API that manages school events like timetable changes and appointments. It syncs data from external systems, stores it in a database, and provides access via an API web server. It enables real-time updates for users and runs background tasks like generating calendars. Access control ensures security, and notifications keep relevant parties informed through email and real-time messages.","sidebar":"tutorialSidebar"},"dev/events-api/notifications__email___socket_io__":{"id":"dev/events-api/notifications__email___socket_io__","title":"Chapter 9: Notifications (Email & Socket.IO)","description":"Welcome back! In our previous chapter, Real-time Communication (Socket.IO), we learned how our events-api uses Socket.IO to send instant updates to connected clients, like a live news ticker in a web app. This is great for showing changes right away on a user\'s screen.","sidebar":"tutorialSidebar"},"dev/events-api/real_time_communication__socket_io__":{"id":"dev/events-api/real_time_communication__socket_io__","title":"real_time_communication__socket_io__","description":"Chapter 8: Real-time Communication (Socket.IO)","sidebar":"tutorialSidebar"},"dev/events-api/request_handlers__controllers__":{"id":"dev/events-api/request_handlers__controllers__","title":"Chapter 5: Request Handlers (Controllers)","description":"Welcome back! In our last chapter, Access Control (Authentication & Authorization), we saw how our application uses the Express.js web server (API Web Server (Express.js)) and its middleware pipeline to receive requests, identify who is making the request (Authentication), and check if they are allowed to perform the requested action (Authorization).","sidebar":"tutorialSidebar"},"dev/guide-fr/index":{"id":"dev/guide-fr/index","title":"Mode d\'emploi FR","description":"Traduire le site","sidebar":"tutorialSidebar"},"dev/intro/index":{"id":"dev/intro/index","title":"Events App","description":"Technology Stack","sidebar":"tutorialSidebar"},"dev/scenes/events/index":{"id":"dev/scenes/events/index","title":"Events","description":"Audience","sidebar":"tutorialSidebar"},"dev/scenes/index":{"id":"dev/scenes/index","title":"Scenes","description":"Event with Class 25 and 26 from GBSL","sidebar":"tutorialSidebar"},"dev/services/ics/images/index":{"id":"dev/services/ics/images/index","title":"ICS","description":"","sidebar":"tutorialSidebar"},"dev/services/notifications/index":{"id":"dev/services/notifications/index","title":"Notifications","description":"Email","sidebar":"tutorialSidebar"},"dev/services/webuntis/index":{"id":"dev/services/webuntis/index","title":"WebUntis","description":"WebuntisWebuntis","sidebar":"tutorialSidebar"},"events/filter/index":{"id":"events/filter/index","title":"Termine Filtern","description":"Termine lassen sich nach verschiedenen Kriterien filtern. So k\xf6nnen beispielsweise nur Termine einer bestimmten Klasse oder Abteilung angezeigt werden.","sidebar":"tutorialSidebar"},"events/import/index":{"id":"events/import/index","title":"Termin-Import","description":"Termine k\xf6nnen auch aus einer Excel-Tabelle importiert werden. Dabei werden mehrere Import-Formate unterst\xfctzt.","sidebar":"tutorialSidebar"},"events/index":{"id":"events/index","title":"Termine","description":"","sidebar":"tutorialSidebar"},"events/new/index":{"id":"events/new/index","title":"Termine erfassen","description":"Auf dieser Seite wird erkl\xe4rt","sidebar":"tutorialSidebar"},"events/share/index":{"id":"events/share/index","title":"Partager un \xe9v\xe8nement","description":"Chaque \xe9v\xe8nement peut \xeatre partag\xe9 sous forme de lien. Si le rendez-vous est public, il peut \xeatre consult\xe9 par toutes les personnes. Il est \xe9galement possible de s\xe9lectionner plusieurs \xe9v\xe8nements et de les partager :","sidebar":"tutorialSidebar"},"events/shift/index":{"id":"events/shift/index","title":"Termine aufs n\xe4chste Jahr \xdcbertragen","description":"Um die Terminplanung f\xfcr das n\xe4chste Schuljahr vorzunehmen, sollte mit Termin-Gruppen gearbeitet werden.","sidebar":"tutorialSidebar"},"events/subscribe/index":{"id":"events/subscribe/index","title":"Abonnieren","description":"Der Terminkalender kann auch in der pers\xf6nlichen Kalenderanwendung (Outlook, iCalendar, Google Calendar) abonniert werden. So werden alle Termine automatisch in den eigenen Kalender \xfcbernommen.","sidebar":"tutorialSidebar"},"events/update/index":{"id":"events/update/index","title":"Actualiser les \xe9v\xe8nements","description":"Les \xe9v\xe8nements publi\xe9s peuvent \xeatre actualis\xe9s \xe0 tout moment par l\'auteur. D\xe8s qu\'un \xe9v\xe8nements a \xe9t\xe9 soumis pour examen, il ne peut plus \xeatre \xe9dit\xe9. A partir de ce moment, les mises-\xe0-jour ne sont plus possibles que par une nouvelle version dd l\'\xe9v\xe8nement.","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"\xc9v\xe8nements","description":"Documentation, instructions et aide pour l\'utilisation du Calendrier des \xe9v\xe8nements.","sidebar":"tutorialSidebar"},"login/index":{"id":"login/index","title":"Anmelden","description":"\xd6ffentliche Termine k\xf6nnen ohne Anmeldung eingesehen werden. Um jedoch eigene Termine zu erfassen, den personalisierten Kalender anzuzeigen oder um diesen zu abonnieren, ist eine Anmeldung mit dem Schulaccount erforderlich.","sidebar":"tutorialSidebar"}}}}')}}]);