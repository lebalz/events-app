"use strict";(self.webpackChunkevents_app=self.webpackChunkevents_app||[]).push([["2652"],{14832:function(e,n,s){s.r(n),s.d(n,{default:()=>h,frontMatter:()=>i,metadata:()=>t,assets:()=>c,toc:()=>d,contentTitle:()=>o});var t=JSON.parse('{"id":"dev/events-api/index","title":"Tutorial: events-api","description":"This project is an API that manages school events like timetable changes and appointments. It syncs data from external systems, stores it in a database, and provides access via an API web server. It enables real-time updates for users and runs background tasks like generating calendars. Access control ensures security, and notifications keep relevant parties informed through email and real-time messages.","source":"@site/docs/10-dev/events-api/index.md","sourceDirName":"10-dev/events-api","slug":"/dev/events-api/","permalink":"/docs/dev/events-api/","draft":false,"unlisted":false,"editUrl":"https://github.com/lebalz/events-app/edit/main/10-dev/events-api/index.md","tags":[],"version":"current","frontMatter":{"page_id":"23f7fb65-cac7-4c63-8ac4-d8e303e9c856"},"sidebar":"tutorialSidebar","previous":{"title":"Database","permalink":"/docs/dev/database/"},"next":{"title":"Chapter 1: Database ORM (Prisma)","permalink":"/docs/dev/events-api/database_orm__prisma__"}}'),a=s("85893"),r=s("50065");let i={page_id:"23f7fb65-cac7-4c63-8ac4-d8e303e9c856"},o="Tutorial: events-api",c={},d=[{value:"Chapters",id:"chapters",level:2}];function l(e){let n={a:"a",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"tutorial-events-api",children:"Tutorial: events-api"})}),"\n",(0,a.jsxs)(n.p,{children:["This project is an API that ",(0,a.jsx)(n.em,{children:"manages"})," ",(0,a.jsx)(n.strong,{children:"school events"})," like timetable changes and appointments. It ",(0,a.jsx)(n.em,{children:"syncs"})," data from ",(0,a.jsx)(n.strong,{children:"external systems"}),", stores it in a ",(0,a.jsx)(n.strong,{children:"database"}),", and provides access via an ",(0,a.jsx)(n.strong,{children:"API web server"}),". It enables ",(0,a.jsx)(n.strong,{children:"real-time updates"})," for users and runs ",(0,a.jsx)(n.strong,{children:"background tasks"})," like generating calendars. ",(0,a.jsx)(n.strong,{children:"Access control"})," ensures security, and ",(0,a.jsx)(n.strong,{children:"notifications"})," keep relevant parties informed through email and real-time messages."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Source Repository:"})," ",(0,a.jsx)(n.a,{href:"https://github.com/lebalz/events-api",children:"events-api"})]}),"\n",(0,a.jsx)(n.mermaid,{value:'flowchart TD\r\n    A0["Database ORM (Prisma)"]\r\n    A1["API Web Server (Express.js)"]\r\n    A2["Real-time Communication (Socket.IO)"]\r\n    A3["Access Control (Authentication & Authorization)"]\r\n    A4["Request Handlers (Controllers)"]\r\n    A5["Data Logic (Models)"]\r\n    A6["External Data Sync"]\r\n    A7["Background Task Runner (Bree)"]\r\n    A8["Notifications (Email & Socket.IO)"]\r\n    A1 -- "Routes Requests" --\x3e A4\r\n    A1 -- "Applies Middleware" --\x3e A3\r\n    A4 -- "Executes Logic" --\x3e A5\r\n    A5 -- "Accesses Database" --\x3e A0\r\n    A7 -- "Runs Tasks" --\x3e A5\r\n    A4 -- "Initiates Sync" --\x3e A6\r\n    A6 -- "Persists Data" --\x3e A0\r\n    A5 -- "Triggers Messages" --\x3e A8\r\n    A8 -- "Delivers Messages" --\x3e A2'}),"\n",(0,a.jsx)(n.h2,{id:"chapters",children:"Chapters"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/dev/events-api/database_orm__prisma__",children:"Database ORM (Prisma)\r\n"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/dev/events-api/data_logic__models__",children:"Data Logic (Models)\r\n"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/dev/events-api/api_web_server__express_js__",children:"API Web Server (Express.js)\r\n"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/dev/events-api/access_control__authentication___authorization__",children:"Access Control (Authentication & Authorization)\r\n"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/dev/events-api/request_handlers__controllers__",children:"Request Handlers (Controllers)\r\n"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/dev/events-api/external_data_sync_",children:"External Data Sync\r\n"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/dev/events-api/background_task_runner__bree__",children:"Background Task Runner (Bree)\r\n"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/dev/events-api/real_time_communication__socket_io__",children:"Real-time Communication (Socket.IO)\r\n"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/dev/events-api/notifications__email___socket_io__",children:"Notifications (Email & Socket.IO)\r\n"})}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsxs)(n.p,{children:["Generated by ",(0,a.jsx)(n.a,{href:"https://github.com/The-Pocket/Tutorial-Codebase-Knowledge",children:"AI Codebase Knowledge Builder"})]})]})}function h(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},50065:function(e,n,s){s.d(n,{Z:function(){return o},a:function(){return i}});var t=s(67294);let a={},r=t.createContext(a);function i(e){let n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);